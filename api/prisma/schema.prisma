// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MEMBER
}

enum TenantPlan {
  FREE
  PRO
}

model Tenant {
  id    String   @id @default(uuid())
  name  String   @unique
  slug  String   @unique // For URL-friendly identifiers, e.g., acme, globex
  plan  TenantPlan @default(FREE)
  users User[]
  notes Note[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  role         UserRole @default(MEMBER)
  tenantId     String
  tenant       Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  notes        Note[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, tenantId]) // Ensure email is unique within a tenant
}

model Note {
  id        String   @id @default(uuid())
  title     String
  content   String?
  tenantId  String
  tenant    Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Restrict) // Don't delete notes if user is deleted

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([tenantId])
}